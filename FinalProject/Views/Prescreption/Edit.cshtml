@model FinalProject.ViewModels.Prescreption.CreateViewModel
@using System.Text.Json.Serialization;
@using System.Text.Json

@{
    ViewData["Title"] = "Edit";
    Layout = "_DoctorLayout";

    SelectList PatientsList = new SelectList(ViewBag.Patients, "Id", "Name");
    SelectList DrugsList = new SelectList(ViewBag.Drugs, "Id", "Name");
    SelectList AnalysisList = new SelectList(ViewBag.Analysis, "Id", "Name");

}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a style="text-decoration:none" asp-action="Index" asp-controller="Admin">Dashboard</a></li>
        <li class="breadcrumb-item"><a style="text-decoration:none" asp-action="Index" asp-controller="Prescreption">Prescreption</a></li>
        <li class="breadcrumb-item active" aria-current="page">Add new Prescreption</li>
    </ol>
</nav>

<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit">
            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="PatientId" class="form-label mt-4"></label>

                <select asp-for="PatientId" class="form-select" asp-items="PatientsList"></select>
                <span asp-validation-for="PatientId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Problem" class="col-form-label col-form-label-lg mt-4 "></label>
                <input asp-for="Problem" class="form-select" />
                <span asp-validation-for="Problem" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ReExaminatoinDate" class="control-label form-label mt-4"></label>
                <input asp-for="ReExaminatoinDate" class="form-select" />
                <span asp-validation-for="ReExaminatoinDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Weight" class="control-label form-label mt-4"></label>
                <input asp-for="Weight" class="form-select" />
                <span asp-validation-for="Weight" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Height" class="control-label form-label mt-4"></label>
                <input asp-for="Height" class="form-select" />
                <span asp-validation-for="Height" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BloodPressure" class="control-label form-label mt-4"></label>
                <input asp-for="BloodPressure" class="form-select" />
                <span asp-validation-for="BloodPressure" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Note" class="control-label form-label mt-4"></label>
                <input asp-for="Note" class="form-select" />
                <span asp-validation-for="Note" class="text-danger"></span>
            </div>

            <div id="fieldsContainer">
                <h1>Drugs</h1>
                @foreach (var item in @ViewBag.SelectedDrugsList)
               {
                    <div class="form-group myflex">
                      
                        <select class="form-select selectDrSt" name="drugSelectList[]">
                         @foreach (var drug in ViewBag.Drugs)
                        {
                            if(drug.Id == item.Id)
                            {
                                        <option value="@drug.Id" selected>@drug.Name</option>
                                        continue;
                            }
                            <option value="@drug.Id">@drug.Name</option>
                        }
                    </select>
                        <input name="instructions[]" class="form-select DrIn" value="@item.Instructions">

                        <button type="button" class="btn btn-danger  Drbtn" onclick="removeParent(this)">
                            Remove 
                        </button>
                </div>
               }

                @* <div>@ViewBag.Drugs</div> *@
            </div>
            <button type="button" class="btn btn-primary mt-4" id="addDrugFieldsBtn">Add new Drug</button>

            <div id="analysisContainer" style="margin-top:10px">
                <h1> Analysis</h1>
                @foreach (var item in @ViewBag.SelectedAnalysisList)
                {

                    <div class="form-group myflex">

                        <select class="form-select selextANSt" name="medicalAnalysisList[]">
                            @foreach (var analysis in ViewBag.Analysis)
                            {
                                if (analysis.Id == item.Id)
                                {
                                    <option value="@analysis.Id" selected>@analysis.Name</option>
                                    continue;
                                }
                                <option value="@analysis.Id">@analysis.Name</option>
                            }
                        </select>
                        <button type="button" class="btn btn-danger Anbtn" onclick="removeParent(this)">Remove</button>
                    </div>
                }

            </div>
            <button type="button" class="btn btn-primary mt-4" id="addAnalysisBtn">Add New Analysis</button>
            <div class="form-group">
                <input type="submit" value="Save Changes" class="btn btn-primary mt-4"/>
            </div>

        </form>
    </div>
</div>

<style>
    .myflex {
        display: flex;
        justify-content: space-between;
        margin-top: 5px;
    }

    .selextANSt {
        width: 88%;
    }

    .Anbtn {
        width: 10%;
    }
    /* Drugs */
    .selectDrSt {
        width: 43%;
    }

    .DrIn {
        width: 43%;
    }

    .Drbtn {
        width: 10%;
    }

</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function addDrugSelectList() {
        var DrugsList = @Json.Serialize(@ViewBag.Drugs);
            console.log(DrugsList);

            var drugContainer = document.getElementById('fieldsContainer');
            // Create a new div for the select list and its label
            var newDiv = document.createElement('div');
            newDiv.classList.add('form-group');
            newDiv.classList.add('myflex');

            
            // Create the select list
            var DrugsSelectList = document.createElement('select');
            DrugsSelectList.classList.add('form-select');
            DrugsSelectList.classList.add('selectDrSt');
            DrugsSelectList.setAttribute('name', 'drugSelectList[]');
            DrugsSelectList.setAttribute('asp-items', "AnalysisList")

            DrugsList.forEach(function (item) {
                var option = document.createElement('option');
                option.value = item.id;
                option.textContent = item.name;
                DrugsSelectList.appendChild(option);

            });

            //instructionLabel
            var instructionLabel = document.createElement('label');
            instructionLabel.textContent = 'Drug Instructions';
            //instructionInput

            var instructionInput = document.createElement('input');
            instructionInput.setAttribute('name', "instructions[]")
            instructionInput.classList.add('DrIn');
            instructionInput.classList.add('form-select');


            newDiv.appendChild(DrugsSelectList);
            newDiv.appendChild(instructionInput);
           


            // add button
            var button = document.createElement("button");
            // Set button attributes
            button.setAttribute("type", "button");
            button.setAttribute("class", "btn btn-danger");
            button.classList.add('Drbtn');
            button.textContent = "Remove";
            // Add onclick event listener to remove its parent element
            button.onclick = function () {
                this.parentElement.remove(); // Removes the parent element of the button
            };
            newDiv.appendChild(button); // Append the new div to the container
            drugContainer.appendChild(newDiv); // Append the new div to the container
        }
        // Add event listener to the "Add New Analysis" button
        document.getElementById('addDrugFieldsBtn').addEventListener('click', addDrugSelectList);



        // -----------------------------------------------------------------

        // Function to create and append analysis select list


        function addAnalysisSelectList() {
            var AnalysisList = @Json.Serialize(@ViewBag.Analysis);
            console.log(AnalysisList);

            var analysisContainer = document.getElementById('analysisContainer');
            // Create a new div for the select list and its label
            var newDiv = document.createElement('div');
            newDiv.classList.add('form-group');
            newDiv.classList.add('myflex');

             // Create the select list
            var selectList = document.createElement('select');
            selectList.classList.add('form-select');
            selectList.classList.add('selextANSt');
            selectList.setAttribute('name', 'medicalAnalysisList[]');

            AnalysisList.forEach(function (item) {
                var option = document.createElement('option');
                option.value = item.id;
                option.textContent = item.name;
                console.log(option);
                selectList.appendChild(option);
            });
            newDiv.appendChild(selectList); // Append the select list to the new div
            // add button
            var button = document.createElement("button");
            // Set button attributes
            button.setAttribute("type", "button");
            button.setAttribute("class", "btn btn-danger");
            button.classList.add('Anbtn');
            button.textContent = "Remove";
            // Add onclick event listener to remove its parent element
            button.onclick = function () {
                this.parentElement.remove(); // Removes the parent element of the button
            };
            newDiv.appendChild(button); // Append the new div to the container
            analysisContainer.appendChild(newDiv); // Append the new div to the container

        }

        // Add event listener to the "Add New Analysis" button
        document.getElementById('addAnalysisBtn').addEventListener('click', addAnalysisSelectList);

        function removeParent(button) {
            button.parentElement.remove(); // Removes the parent div of the button
        }
       
    </script>
}

